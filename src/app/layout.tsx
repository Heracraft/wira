import type { Metadata } from "next";
import { headers } from "next/headers";

import { createClient } from "@/lib/store.server";

import { Toaster } from "@/components/ui/sonner";
import AuthProvider from "@/components/AuthProvider";

import Navbar from "@/components/navbar";
import Footer from "@/components/footer";

import "./globals.css";

import { User } from "@/types/auth";

import { db } from "@/db/index";
import { talentProfiles, companyProfiles } from "@/db/schema";
import { eq } from "drizzle-orm";

export const metadata: Metadata = {
	title: "Create Next App",
	description: "Generated by create next app",
};

export default async function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode;
}>) {
	const headersList = await headers();
	const pathname = headersList.get("x-pathname");

	const client = await createClient(); //server client

	const {
		data: { user },
	} = await client.auth.getUser();

	let initialUserState = null;

	if (user && !pathname?.startsWith("/auth") && user.email) {
		// let email: string = user.email
		initialUserState = {
			email: user.email,
			id: user.id,
			userType: user.user_metadata.userType,
		} as User;

		if (user.user_metadata.userType === "talent") {
			const talentProfile = (await db.select().from(talentProfiles).where(eq(talentProfiles.userId, user.id)))[0];
			// console.log({ talentProfile });
			if (talentProfile) {
				initialUserState.fullName = talentProfile.fullName as string;
				initialUserState.avatarUrl = talentProfile.avatarUrl;
				initialUserState.phoneNumber = talentProfile.phoneNumber;
				initialUserState.dateOfBirth = talentProfile.dateOfBirth;
			}
		}
	}

	return (
		<html lang="en">
			{/* TODO: separate this layout into two layout groups to avoid a pile of conditional rendering */}
			<body className="antialiased bg-neutral-50 min-h-[100dvh] flex flex-col overflow-x-hidden">
				<Navbar />
				<AuthProvider initialState={initialUserState} />
				<div className="flex-1 py-5 flex flex-col">{children}</div>
				{pathname?.startsWith("/auth") || pathname?.startsWith("/onboarding") || pathname?.startsWith("/admin") ? null : <Footer />}
				<Toaster />
			</body>
		</html>
	);
}
